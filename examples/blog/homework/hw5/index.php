<ul>
<li><b>Homework 1:</b> Change java source code.<br/>
    <div class="ans">
    <p>Result:</p>
    <div style="text-align:center"><img src="hw5/java-result.png"/></div>
    <p>RunSample.java:</p>
    <textarea name="code" class="java:collapse" cols="60">
<?php echo file_get_contents('hw5/java/RunSample.java'); ?> 
    </textarea>
    <p>Sample.java:</p>
    <textarea name="code" class="java:collapse" cols="60">
<?php echo file_get_contents('hw5/java/internetics/Sample.java'); ?> 
    </textarea>
    </div>
</li>
<li><b>Homework 2:</b>Configure apache to handle java servlets, and write some servlets or JSP pages.<br />
    <div class="ans">
    <b>Extra requirements for our server</b>(I use httpd-2.2.21):<br/>
    <span><a href="http://archive.apache.org/dist/tomcat/tomcat-5/v5.5.31/bin/apache-tomcat-5.5.31.tar.gz" target="_blank">apache-tomcat-5.5.31.tar.gz</a></span>;
    <span><a href="http://archive.apache.org/dist/tomcat/tomcat-connectors/jk/binaries/linux/jk-1.2.30/i586/mod_jk-1.2.30-httpd-2.2.X.so" target="_blank">mod_jk-1.2.30 for httpd 2.2</a></span>
    <br/> 
    <p><b>Configuration for tomcat:</b>
    <ol>
    <li>Untar apache-tomcat-5.5.31.tar.gz:
        <p class="wikisource">
        $ tar xvzf apache-tomcat-5.5.31.tar.gz<br/>
        $ mv apache-tomcat-5.5.31 tomcat
        </p>
    </li>
    <li>Modify tomcat configuration file: ~/tomcat/conf/server.xml, modify several default port number to avoid potential conflicts. First, change server port to: 
        <textarea name="code" class="xml:nocontrols" cols="60"><Server port="10144" shutdown="SHUTDOWN"></textarea>
since I am in <span class="emph-alt">group 44</span>, and the port 10144 was not used.
    </li>
    <li> 
    Change the AJP 1.3 connector port to :
        <textarea name="code" class="html:nocontrols" cols="60">
<Connector port="10044"
           enableLookups="false" redirectPort="8443" protocol="AJP/1.3" /></textarea>
for the same reason.
    </li>
    <li>Then change the non-SSL HTTP/1.1 Connector port to:
        <textarea name="code" class="html:nocontrols" cols="60">
<Connector port="9044" maxHttpHeaderSize="8192"
           maxThreads="150" minSpareThreads="25" maxSpareThreads="75"
           enableLookups="false" redirectPort="8443" acceptCount="100"
           connectionTimeout="20000" disableUploadTimeout="true" /> </textarea>
    </li>
    <li>Run: ~/tomcat/bin/startup.sh. Then I can visit the tomcat main-page through:<a href="http://162.105.203.19:9044/">http://162.105.203.19:9044/</a>.
    </li>
    </ol>
    </p>
    <p><b>Configuration for Apache:</b>
    <p>In order to get webpage generated by tomcat from port 8044 instead of 9044, we need certain tool to help redirection. Two options are provided: mod_proxy, or mod_jk, the former of which highly recommended and simpler to configure. However,after searching on the web and failed to find mod_proxy.so, I turned to mod_jk, which is quite borthersome :
    </p>
    <ol>
    <li>For convenience, rename the mod_jk-xxx.so file, then place it as a apache module:
        <p class="wikisource">
        $ mv mod_jk-1.2.30-httpd-2.2.X.so mod_jk.so <br/>
        $ mv mod_jk.so ~/apache/modules
        </p>
    </li>
    <li>Modify apache configure file: ~/apache/conf/httpd.conf, append lines below the php module lines we added several weeks ago:
        <textarea name="code" class="py:nocontrols" cols="60">
LoadModule php5_module        modules/libphp5.so
LoadModule jk_module          modules/mod_jk.so

<IfModule jk_module>
# definition of workers
JkWorkersFile conf/workers.properties
# definition of mount rules
JkMountFile conf/uriworkermap.properties
JkLogFile logs/mod_jk.log
JkLogLevel warn
</IfModule>
</textarea>
    </li> 
    <li>Create mod_jk worker configure file <em>workers.properties</em> under the same folder along with httpd.conf, with content:
        <textarea name="code" class="py:nocontrols" cols="60">
#
# workers.properties
#

worker.list=mytomcat, status

worker.mytomcat.port=10044
worker.mytomcat.host=localhost
worker.mytomcat.type=ajp13

worker.status.type=status
</textarea>
    </li>
    <li>Create mod_jk map configure file <em>uriworkermap.properities</em> in the same directory, with content as:
        <textarea name="code" class="py:nocontrols" cols="60">
# Here tells apache what kinds of
# url pattern we should resort to tomcat.
# I recommend to mount only sub directories
# for consistency

/jsp-examples*=mytomcat
/servlets-examples*=mytomcat
/servlet/*=mytomcat
/jkmanager=status

# File types below will not be mounted from
# tomcat workspace

#!/*.htm=mytomcat
#!/*.html=mytomcat
</textarea>
    </li> 
    <li> Restart apache. And now you can visit tomcat pages with my 8044 port number instead of 9044: <br/>
<a href="../jsp-examples">http://162.105.203.19:8044/jsp-examples</a><br/>
<a href="../servlet/counter">http://162.105.203.19:8044/servlet/counter</a><br/>
<a href="../servlet/ip">http://162.105.203.19:8044/servlet/ip</a><br/>
<a href="../servlet/track">http://162.105.203.19:8044/servlet/track</a><br/>
<b>Note: The servlet service maybe unavailable if someone else set the port number as xxx44 too...</b>
    </li> 
    </ol>
    </p>
    </div>
</li>
</ul>
